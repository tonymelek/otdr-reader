var v=Object.defineProperty;var x=(l,e,t)=>e in l?v(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var s=(l,e,t)=>(x(l,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))r(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerpolicy&&(n.referrerPolicy=a.referrerpolicy),a.crossorigin==="use-credentials"?n.credentials="include":a.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(a){if(a.ep)return;a.ep=!0;const n=t(a);fetch(a.href,n)}})();class k{constructor(e,t="LE"){s(this,"data");s(this,"endian");s(this,"cursor");this.data=e,this.endian=t,this.cursor=0}async getArrayName(e,t){let r=t*8,a="";return e=="uInt"?a="Uint"+r+"Array":e=="Int"?a="Int"+r+"Array":e=="Float"?a="Float"+r+"Array":e=="BigInt"?a="BigInt"+r+"Array":e=="BigInt"&&(a="BigUint"+r+"Array"),a}async readString(e){let t="";for(let a=0;a<e;a++){var r=await this.readVal(1);t+=String.fromCharCode(r)}return t}async getString(){for(var e="",t=await this.readVal(1);t!=0&&t<=128;)e+=String.fromCharCode(t),t=await this.read(1);return e}async readVal(e,t="Int",r=this.cursor){let a=r+e;if(a>this.data.byteLength)return 0;let n=this.data.slice(r,a),i=await this.getArrayName(t,e),o=new window[i](n);return this.cursor=a,o[0]}async read(e=1){return await this.readVal(e)}async readInt8(e){return await this.readVal(1,"Int",e)}async readUInt8(e){return await this.readVal(1,"uInt",e)}async readInt16(e){return await this.readVal(2,"Int",e)}async readUInt16(e){return await this.readVal(2,"uInt",e)}async readInt32(e){return await this.readVal(4,"Int",e)}async readUInt32(e){return await this.readVal(4,"uInt",e)}async readFloat32(e){return await this.readVal(4,"Float",e)}async readFloat64(e){return await this.readVal(8,"Float",e)}async readBigInt64(e){return await this.readVal(8,"BigInt",e)}async readBigUint64(e){return await this.readVal(8,"BigUint",e)}async seek(e){return this.cursor=e,e}async tell(){return this.cursor}}class P{constructor(){s(this,"mapping");this.mapping={mt:"meters",km:"kilometers",mi:"miles",kf:"kilo-ft",ST:"[standard trace]",RT:"[reverse trace]",DT:"[difference trace]",RF:"[reference]",BC:"(as-built)",CC:"(as-current)",RC:"(as-repaired)",OT:"(other)",651:"G.651 (50um core multimode)",652:"G.652 (standard SMF)",653:"G.653 (dispersion-shifted fiber)",654:"G.654 (1550nm loss-minimzed fiber)",655:"G.655 (nonzero dispersion-shifted fiber)"}}async getMapping(e,t=!1){let r="";if(e in this.mapping){let a="";t&&(a=e+" "),r=a+this.mapping[e]}return r}}class S{constructor(e){s(this,"name");s(this,"prefix");s(this,"params");s(this,"units");this.name=e,this.prefix=e.length+1,this.params={},this.units=[{name:"lang",type:"String",length:2,term:!0},{name:"cable ID",type:"String",length:0,term:!0},{name:"fiber ID",type:"String",length:0,term:!0},{name:"fiber type",type:"Char",read:"uInt",length:2,term:!0},{name:"wavelength",type:"uInt",length:2,unit:"nm",term:!0},{name:"location A",type:"String",length:0,term:!0},{name:"location B",type:"String",length:0,term:!0},{name:"cable|fiber type",type:"String",length:0,term:!0},{name:"build condition",type:"Char",read:"String",length:2,append:!1,term:!1},{name:"user offset",type:"Int",length:4,term:!0},{name:"user offset distance",type:"Int",length:4,term:!0,version:2},{name:"operator",type:"String",length:0,term:!0},{name:"comments",type:"String",length:0,term:!0}]}}class M{constructor(e){s(this,"name");s(this,"prefix");s(this,"params");s(this,"units");this.name=e,this.prefix=e.length+1,this.params={},this.units=[{name:"supplier",type:"String",length:0,term:!0},{name:"OTDR",type:"String",length:0,term:!0},{name:"OTDR S/N",type:"String",length:0,term:!0},{name:"module",type:"String",length:0,term:!0},{name:"module S/N",type:"String",length:0,term:!0},{name:"software",type:"String",length:0,term:!0},{name:"other",type:"String",length:0,term:!0}]}}class B{constructor(e){s(this,"name");s(this,"sol");s(this,"units");this.name=e,this.sol=299792.458/1e6,this.units=[{name:"date/time",type:"uInt",length:4,term:!0},{name:"unit",type:"Char",read:"String",length:2,term:!0},{name:"wavelength",type:"uInt",length:2,scale:.1,pres:1,unit:"nm",term:!0},{name:"acquisition offset",type:"Int",length:4,term:!0},{name:"acquisition offset distance",type:"Int",length:4,term:!0},{name:"number of pulse width entries",type:"uInt",length:2,term:!0},{name:"pulse width",type:"uInt",length:2,pres:0,unit:"ns",term:!0},{name:"sample spacing",type:"uInt",scale:1e-8,unit:"usec",length:4,term:!0},{name:"num data points",type:"uInt",length:4,term:!0},{name:"index",type:"uInt",length:4,scale:1e-5,pres:6,term:!0},{name:"BC",type:"uInt",scale:-.1,pres:2,unit:"dB",length:2,term:!0},{name:"num average",type:"uInt",length:4,term:!0},{name:"averaging time",type:"uInt",length:2,scale:.1,pres:0,unit:"sec",term:!0},{name:"range",type:"uInt",length:4,scale:2e-5,pres:6,unit:"km",func:["tDx"],params:[["index","sample spacing","num data points"]],result:"append",term:!0},{name:"acquisition range distance",type:"Int",length:4,term:!0},{name:"front panel offset",type:"Int",length:4,term:!0},{name:"noise floor level",type:"uInt",length:2,term:!0},{name:"noise floor scaling factor",type:"Int",length:2,term:!0},{name:"power offset first point",type:"uInt",length:2,term:!0},{name:"loss thr",type:"uInt",length:2,scale:.001,pres:3,unit:"dB",term:!0},{name:"refl thr",type:"uInt",length:2,scale:-.001,pres:3,unit:"dB",term:!0},{name:"EOT thr",type:"uInt",length:2,scale:.001,pres:3,unit:"dB",term:!0},{name:"trace type",type:"Char",read:"String",append:!0,length:2,term:!0},{name:"X1",type:"Int",length:4,term:!0},{name:"Y1",type:"Int",length:4,term:!0},{name:"X2",type:"Int",length:4,term:!0},{name:"Y2",type:"Int",length:4,term:!0}]}async tDx(e){let t=e[0],r=e[1],a=e[2],n=parseFloat(t),i=r;isNaN(r)&&(i=r.split(" ")[0]);let o=parseFloat(i)*this.sol/n;return{dx:o,ior:n,sol:this.sol,resolution:o*1e3,result:o*a}}}class F{constructor(e){s(this,"name");s(this,"eventMap");s(this,"summaryMap");s(this,"units");this.name=e,this.eventMap=new A,this.summaryMap=new C,this.units=[{name:"event number",type:"uInt",length:2,term:!0,func:["loopEvents","getSummary"],numCalls:["this",1],result:"numCalls",propNames:["events","summary"],params:[["FxdParams.ior","FxdParams.sol"],[]]}]}async loopEvents(e){let t=e[0],r=e[1],a=1e-4*r/parseFloat(t);return this.eventMap.factor=a,this.summaryMap.factor=a,{name:"events",obj:this.eventMap}}async getSummary(){return{name:"summary",obj:this.summaryMap}}}class C{constructor(){s(this,"params");s(this,"factor");s(this,"units");this.params={},this.factor=0,this.units=[{name:"total loss",type:"Int",length:4,pres:3,scale:.001},{name:"loss start",type:"Int",length:4,pres:6,mult:"factor"},{name:"loss end",type:"uInt",length:4,pres:6,mult:"factor"},{name:"ORL",type:"uInt",length:2,scale:.001,pres:3},{name:"ORL start",type:"Int",length:4,pres:6,mult:"factor"},{name:"ORL finish",type:"uInt",length:4,pres:6,mult:"factor"}]}}class A{constructor(){s(this,"params");s(this,"factor");s(this,"units");this.params={},this.factor=0,this.units=[{name:"number",type:"uInt",length:2},{name:"distance",type:"uInt",length:4,mult:"factor"},{name:"slope",type:"Int",length:2,pres:3,scale:.001},{name:"splice",type:"Int",length:2,pres:3,scale:.001},{name:"refl loss",type:"Int",length:4,pres:3,scale:.001},{name:"event type",type:"String",length:8,func:["eventMap"],params:[["this"]],result:"append"},{name:"end of prev",type:"uInt",length:4,pres:3,mult:"factor"},{name:"start of curr",type:"uInt",length:4,pres:3,mult:"factor"},{name:"end of curr",type:"uInt",length:4,pres:3,mult:"factor"},{name:"start of next",type:"uInt",length:4,pres:3,mult:"factor"},{name:"peak",type:"uInt",length:4,pres:3,mult:"factor"},{name:"comments",type:"String",length:0}]}async eventMap(e){let t=e[0],r="(.)(.)9999LS",a=t.match(r),n=t;if(a!=null){switch(n+=" ",a[2]){case"A":n+="manual";break;case"E":n+="end";break;default:n+="auto";break}switch(n+=" ",parseInt(a[1])){case 0:n+="loss/drop/gain";break;case 1:n+="reflection";break;case 2:n+="multiple";break;default:n+="unknown";break}}return{result:n}}}class O{constructor(e,t){s(this,"name");s(this,"reader");s(this,"yMin");s(this,"yMax");s(this,"units");this.name=e,this.reader=t,this.yMin=void 0,this.yMax=void 0,this.units=[{name:"number of Points",type:"uInt",length:4,term:!0},{name:"traces",type:"Int",length:2,term:!0},{name:"repeat",type:"uInt",length:4,term:!0},{name:"scaling",type:"Int",length:2,scale:.001,term:!0}]}}class E{constructor(e){s(this,"name");s(this,"prefix");s(this,"params");s(this,"units");this.name=e,this.prefix=e.length+1,this.params={},this.units=[{name:"checksum",type:"uInt",length:2,term:!0}]}}const T={GenParams:S,SupParams:M,FxdParams:B,KeyEvents:F,DataPts:O,Cksum:E};class N{constructor(e,t=""){s(this,"className");return new T[e](t)}}class L{constructor(e,t,r){s(this,"name");s(this,"parser");s(this,"devMode");s(this,"pointMap");s(this,"yMin");s(this,"yMax");this.name=e,this.parser=t,this.devMode=r,this.pointMap=new V,this.yMin=void 0,this.yMax=void 0}async loopPoints(e,t,r=1){let a=1/0,n=-1/0,i=1;this.devMode&&(e=100);let o=[];for(let p=0;p<=e;p++){let u=(await this.parser.parseBlock(this.pointMap)).point*t*.001;u>=n&&(n=u),u<=a&&(a=u);let y=r*p*i/1e3;o.push([y,u])}let c=n,h=await this.calcOffset(o,c),d={yMin:a,yMax:n,points:h};return this.yMin=a,this.yMax=n,d}async calcOffset(e,t){return await e.map(function(a){return a.map(function(n,i){return parseFloat(i===1?(t-n).toFixed(6):n.toFixed(6))})})}}class V{constructor(){s(this,"params");s(this,"units");this.params={},this.units=[{name:"point",type:"uInt",length:2,pres:6}]}}class D{constructor(e,t,r,a,n){s(this,"name");s(this,"version");s(this,"size");s(this,"pos");s(this,"order");this.name=e,this.version=t,this.size=r,this.pos=a,this.order=n}}class R{constructor(e,t,r={}){s(this,"path");s(this,"config");s(this,"bf");s(this,"result");s(this,"fileInfo");s(this,"data");s(this,"unitMapping");this.config=e,this.path=t,this.bf={},this.result={params:{},points:{}},this.fileInfo={},this.data=r,this.unitMapping=new P}async run(){try{return this.config.browserMode&&(this.bf=new k(this.data)),this.config.debug&&console.log("File opened"),await this.setVersion(),await this.setMap(),await this.parseParams("GenParams"),await this.parseParams("SupParams"),await this.parseParams("FxdParams"),await this.parseParams("KeyEvents"),await this.parseParams("DataPts"),await this.parsePoints("Points"),await this.parseParams("Cksum"),this.config.browserMode||await this.bf.close(),this.config.debug&&console.log("File closed"),this.result}catch(e){console.log(`There was an error: ${e}`)}}async parsePoints(e){let t=new L(e,this,this.config.devMode),r=this.result.params.DataPts["number of Points"],a=this.result.params.DataPts.scaling,n=this.result.params.FxdParams.resolution,i=await t.loopPoints(r,a,n);this.result.points=i}async parseParams(e){await this.checkBlockAndSetCursor(e);let t=new N(e),r=await this.parseBlock(t);this.result.params[e]=r}async parseBlock(e){let t={};for(const r of e.units)try{let a="";if(r.type==="Char"){a=await this.parseCommand(r,"read");let i=!1;r.hasOwnProperty("append")&&(i=r.append),a=await this.unitMapping.getMapping(a,i)}else a=await this.parseCommand(r);let n=await this.parseResult(a,r,e);if(t[r.name]=await this.addUnit(n,r),r.hasOwnProperty("func")){let i=await this.callFunction(r,e,t,n);t=await this.convertResult(r,i,t)}}catch(a){throw"Something went wront by reading unit: "+r.name+": "+a}return t}async convertResult(e,t,r){if(e.result=="append")r=await this.setBlockInfo(e,t,r);else if(e.result=="numCalls"){let a=Object.keys(t);for(let n=0;n<a.length;n++){const i=a[n];r[i]=t[i]}}return r}async parseResult(e,t,r){if(t.hasOwnProperty("scale")&&(e*=t.scale),t.hasOwnProperty("pres")&&(e=e.toFixed(t.pres)),t.hasOwnProperty("mult")){let a=t.mult,n=r[a];e=(e*n).toFixed(4)}return e}async addUnit(e,t){return t.hasOwnProperty("unit")&&(e=e+" "+t.unit),e}async callFunction(e,t,r,a){await this.functionChecks(e);let n={};for(let i=0;i<e.func.length;i++){const o=e.func[i];let c=await this.getValuesFromBlock(r,e.params[i],a),h=await t[o](c);if(e.hasOwnProperty("numCalls")){let d=e.numCalls[i];e.numCalls[i]==="this"&&(d=a);let p=h.obj,w=h.name,u=await this.loopBlock(d,p);if(e.hasOwnProperty("propNames")){let y=e.propNames[i];this.result[y]=u}else n[w]=u}else n={...h}}return n}async functionChecks(e){if(!e.hasOwnProperty("params"))throw"No Params defined for Block: "+e.name;if(!e.hasOwnProperty("result"))throw"No result defined for Block call in: "+e.name;if(e.func.length!==e.params.length)throw"Different amounts of functions vs params in: "+e.name}async loopBlock(e,t){let r=[];for(let a=0;a<e;a++){let n=await this.parseBlock(t);await r.push(n)}return r.length===1?r[0]:r}async setBlockInfo(e,t,r){let a=e.name;for(const n in t)if(t.hasOwnProperty(n)){let i=t[n];n==="result"?(e.hasOwnProperty("unit")&&(i+=" "+e.unit),r[a]=i):r[n]=i}return r}async getValuesFromBlock(e,t,r){let a=[];return t.forEach(n=>{if(n.indexOf(".")!==-1){let i=n.split("."),o=this.result.params[i[0]][i[1]];a.push(o)}else if(n==="this")a.push(r);else{if(!e.hasOwnProperty(n))throw"Wrong Parameter Name";a.push(e[n])}}),a}async parseCommand(e,t="type"){let r="";return e[t]==="String"?e.length?r=await this.bf.readString(e.length):r=await this.getString():e[t]==="uInt"?r=await this.getUInt(e.length):e.type==="Int"&&(r=await this.getInt(e.length)),r}async checkBlockAndSetCursor(e){let t=this.fileInfo.blocks;if(!(e in t)){if(e=="Cksum")return;throw"blockName "+e+" not found!"}if(t[e].version<2)throw"currently only Version 2 allowed!";if(await this.bf.seek(t[e].pos),await this.getString()!=e)throw"Wrong Header Start-Position for: "+e}async setVersion(){if(this.fileInfo.version=await this.getVersion(),this.fileInfo.version<2)throw"at this moment only Version 2 is supported";this.fileInfo.fullversion=await this.getFullVersion()}async setMap(){this.fileInfo.map=await this.getMap(),this.fileInfo.blocks=await this.getBlocks(this.fileInfo.map)}async toFixedPoint(e=.01,t=2){var r=await this.getUInt(2);return(r*e).toFixed(t)}async getString(){if(this.config.browserMode)return this.bf.getString();for(var e="",t=await this.bf.read(1);t!="";){var r=String(t).charCodeAt(0);if(r==0)break;e+=t,t=await this.bf.read(1)}return e}async getUInt(e=2){var t=null;if(e==2)t=await this.bf.readUInt16();else if(e==4)t=await this.bf.readUInt32();else throw console.log(`parts.get_uint(): Invalid number of bytes ${e}`),"Invalid bytes";return t}async getInt(e=2){var t=null;if(e==2)t=await this.bf.readInt16();else if(e==4)t=await this.bf.readInt32();else throw console.log(`parts.get_uint(): Invalid number of bytes ${e}`),"Invalid bytes";return parseInt(t)}async getVersion(){var e=await this.getString();let t=2;return e!="Map"&&(await this.bf.seek(0),t=1),t}async getFullVersion(){return await this.toFixedPoint()}async getMap(){var e={};return e.bytes=await this.getUInt(4),e.nBlocks=await this.getUInt(2)-1,e}async getBlocks(e){for(var t={},r=e.bytes,a=0;a<e.nBlocks;a++){let n=await this.getString(),i=await this.toFixedPoint(),o=await this.getUInt(4),c=new D(n,i,o,r,a);t[n]=c,r+=o}return t}}class U{constructor(e,t={},r={}){s(this,"path");s(this,"defaultConfig");s(this,"config");s(this,"data");s(this,"parser");this.path=e,this.defaultConfig={debug:!1,createJson:!1,jsonPath:".",jsonName:"result.json",devMode:!1,browserMode:!0},this.config={...this.defaultConfig,...t},this.data=r,this.parser=new R(this.config,this.path,this.data)}async parse(){try{let e=await this.parser.run();if(this.config.createJson)this.writeFileToLocalStorage(e);else return e}catch(e){console.log(`There was an parsing error: ${e}`)}}writeFileToLocalStorage(e){let t=JSON.stringify(e);window.localStorage.setItem("arr",t)}}const j="t_";class ${constructor(e){s(this,"prefix");this.prefix=e}async draw(e,t){let r=await this.getMarkers(t);this.drawEchart(e,r)}async getMarkers(e,t="xAxis",r=30){let a=[];for(const n in e)if(e.hasOwnProperty(n)){const i=e[n];let o={},c=Number.parseFloat(i.distance).toFixed(2);t==="xAxis"?o={name:i.number,xAxis:c,label:{formatter:function(h){return[h.name]}}}:o={name:"Event "+i.number,coord:[i.distance,r],value:c},a.push(o)}return a}drawEchart(e,t){var r=echarts.init(document.getElementById("chartContainer"));let a={animation:!1,title:{left:"center",text:"OTDR Trace Graph"},tooltip:{trigger:"axis",formatter:function(n){return n=n[0],["dB: "+n.data[1]+'<hr size=1 style="margin: 3px 0">',"km: "+n.data[0]+"<br/>"].join("")}},toolbox:{feature:{dataZoom:{},saveAsImage:{}}},xAxis:{name:"Distance (km)",nameTextStyle:{fontWeight:"bold"},splitNumber:10},yAxis:{name:"Refelction (dB)",nameTextStyle:{fontWeight:"bold"},max:function(n){return n.max+10}},dataZoom:[{type:"inside",start:0,end:100},{start:0,end:100}],dataset:{source:e.points},series:[{type:"line",symbol:"none",itemStyle:{color:"#4f81bc"},encode:{x:0,y:1},markLine:{silent:!1,symbol:"none",data:t}}]};r.setOption(a),r.on("mouseover",function(n){let i=parseInt(n.name),o=j+i;G(o)})}}function G(l){H();var e=document.getElementsByClassName(l);e&&(e[0].className+=" selected")}function H(l="event-table"){for(var e=document.getElementById(l),t=e==null?void 0:e.getElementsByTagName("tr"),r=0;r<t.length;r++)t[r].classList.remove("selected")}class z{constructor(){s(this,"chart");s(this,"trPrefix");this.trPrefix="t_",this.chart=new $(this.trPrefix)}clearDivs(){["result","event-sum"].forEach(t=>{document.getElementById(t).innerHTML=""})}async showResults(e){let t=await this.createPropertyList(e.params);await this.writeToDiv(t,"result"),this.chart.draw(e.points,e.events);let r=await this.getEvents(e.events,e.summary);await this.writeToDiv(r,"event-sum")}async createPropertyList(e){let t="<ul>";for(const r in e)if(e.hasOwnProperty(r)){const a=e[r];typeof a=="object"&&a!==null?t+=`<li><b>${r}: </b>${await this.createPropertyList(a)}</li>`:t+=`<li><b>${r}: </b>${a}</li>`}return t+="</ul>",t}async writeToDiv(e,t,r=1){return Promise.resolve().then(function(){setTimeout(function(){document.getElementById(t).innerHTML+=e},r)})}async getEvents(e,t){let r="";return r+=await this.createTable(t,"Summary","sum-table"),r+=await this.createTable(e,"Events","event-table"),r}async createTable(e,t,r=""){let a=`<h3>${t}</h3>`;return a+=`<table id='${r}'>`,Array.isArray(e)?a+=await this.getHeaders(e[0]):a+=await this.getHeaders(e),a+=await this.getTableBody(e),a+="</table>",a}async getTableBody(e){let t="<tbody>";if(Array.isArray(e))for(let r=0;r<e.length;r++){const a=e[r];let n="";a.hasOwnProperty("number")&&(n=this.trPrefix+a.number),t+=`<tr class='${n}'>`,t+=await this.getTd(a),t+="</tr>"}else t+="<tr>",t+=await this.getTd(e),t+="</tr>";return t+="</tbody>",t}async getTd(e){let t="";for(const r in e)e.hasOwnProperty(r)&&(t+=`<td>${e[r]}</td>`);return t}async getHeaders(e){let t="<thead><tr>";for(const r in e)t+=`<th>${r}</th>`;return t+="</tr></thead>",t}}let I=document.createElement("script");I.setAttribute("src","https://cdnjs.cloudflare.com/ajax/libs/echarts/4.6.0/echarts-en.common.min.js");document.head.appendChild(I);const W={browserMode:!0},b=new z,m=document.getElementById("fileinput"),f=document.getElementById("fileList");function q(l){if(!K())return;b.clearDivs();const e=new FileReader;e.onload=t=>{if(t!=null){let r=t.target.result;_(r)}},e.onerror=t=>{console.error(t),g("Error reading file","Alert")},e.readAsArrayBuffer(l)}m==null||m.addEventListener("change",function(){var e;!((e=m.files)!=null&&e.length)||(f&&(f.innerHTML=""),Array.from(m.files).forEach(t=>{if(!t.name.toLowerCase().endsWith(".sor"))return;const r=document.createElement("div");r.className="file-item",r.innerHTML=`<span class="file-item-name">${t.name}</span>`,r.addEventListener("click",()=>{document.querySelectorAll(".file-item").forEach(a=>{a.classList.remove("selected")}),r.classList.add("selected"),q(t)}),f==null||f.appendChild(r)}))});function _(l){new U(void 0,W,l).parse().then(r=>{console.log(r),b.showResults(r)})}function K(){if(typeof window.FileReader!="function")return g("The file API isn't supported on this browser yet."),!1;if(m){if(!m.files)return g("This browser doesn't seem to support the `files` property of file inputs."),!1}else return g("Couldn't find the fileinput element."),!1;return!0}function g(l,e="Alert"){const t=document.getElementById("flashMessage");t.style.display="block",e&&t.classList.add("message"+e);const r=document.getElementById("message");r.innerHTML=l}
